
RobotCar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000716  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000064  00800060  00000716  000007aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  008000c4  008000c4  0000080e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000080e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000840  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  0000087c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000133b  00000000  00000000  00000a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ba  00000000  00000000  00001d47  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ad1  00000000  00000000  00002601  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003f0  00000000  00000000  000030d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000639  00000000  00000000  000034c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a04  00000000  00000000  00003afd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00004501  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 b3 02 	jmp	0x566	; 0x566 <__vector_1>
   8:	0c 94 da 02 	jmp	0x5b4	; 0x5b4 <__vector_2>
   c:	0c 94 01 03 	jmp	0x602	; 0x602 <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 4f 03 	jmp	0x69e	; 0x69e <__vector_10>
  2c:	0c 94 28 03 	jmp	0x650	; 0x650 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e1       	ldi	r30, 0x16	; 22
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 3c       	cpi	r26, 0xC4	; 196
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a4 ec       	ldi	r26, 0xC4	; 196
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 3c       	cpi	r26, 0xCE	; 206
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 89 03 	jmp	0x712	; 0x712 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include <util/delay.h>
/***** Includes Section End *****/


int main(void)
{
  92:	cf 93       	push	r28
  94:	df 93       	push	r29
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
  9a:	c4 56       	subi	r28, 0x64	; 100
  9c:	d1 09       	sbc	r29, r1
  9e:	0f b6       	in	r0, 0x3f	; 63
  a0:	f8 94       	cli
  a2:	de bf       	out	0x3e, r29	; 62
  a4:	0f be       	out	0x3f, r0	; 63
  a6:	cd bf       	out	0x3d, r28	; 61
	u8 str[100] = "Enter (1) for bluetooth mode or (2) for line follower mode : ";
  a8:	8e e3       	ldi	r24, 0x3E	; 62
  aa:	e0 e6       	ldi	r30, 0x60	; 96
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	de 01       	movw	r26, r28
  b0:	11 96       	adiw	r26, 0x01	; 1
  b2:	01 90       	ld	r0, Z+
  b4:	0d 92       	st	X+, r0
  b6:	8a 95       	dec	r24
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x20>
  ba:	fe 01       	movw	r30, r28
  bc:	ff 96       	adiw	r30, 0x3f	; 63
  be:	86 e2       	ldi	r24, 0x26	; 38
  c0:	df 01       	movw	r26, r30
  c2:	1d 92       	st	X+, r1
  c4:	8a 95       	dec	r24
  c6:	e9 f7       	brne	.-6      	; 0xc2 <main+0x30>
	u8 character = 0;
	u8 flag = 0;
	u8 Right_IR = 0 , Left_IR = 0;
	UART_voidInit();
  c8:	0e 94 76 03 	call	0x6ec	; 0x6ec <UART_voidInit>
	for (u8 counter = 0 ; str[counter] != '\0' ; counter++)
  cc:	10 e0       	ldi	r17, 0x00	; 0
  ce:	03 c0       	rjmp	.+6      	; 0xd6 <main+0x44>
	{
		UART_voidTX(str[counter]);
  d0:	0e 94 81 03 	call	0x702	; 0x702 <UART_voidTX>
	u8 str[100] = "Enter (1) for bluetooth mode or (2) for line follower mode : ";
	u8 character = 0;
	u8 flag = 0;
	u8 Right_IR = 0 , Left_IR = 0;
	UART_voidInit();
	for (u8 counter = 0 ; str[counter] != '\0' ; counter++)
  d4:	1f 5f       	subi	r17, 0xFF	; 255
  d6:	e1 e0       	ldi	r30, 0x01	; 1
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	ec 0f       	add	r30, r28
  dc:	fd 1f       	adc	r31, r29
  de:	e1 0f       	add	r30, r17
  e0:	f1 1d       	adc	r31, r1
  e2:	80 81       	ld	r24, Z
  e4:	81 11       	cpse	r24, r1
  e6:	f4 cf       	rjmp	.-24     	; 0xd0 <main+0x3e>
	{
		UART_voidTX(str[counter]);
	}
	flag = UART_u8RX();
  e8:	0e 94 85 03 	call	0x70a	; 0x70a <UART_u8RX>
  ec:	18 2f       	mov	r17, r24
    while (1) 
    {	
		if ('1' == flag)
  ee:	11 33       	cpi	r17, 0x31	; 49
  f0:	11 f5       	brne	.+68     	; 0x136 <main+0xa4>
		{
			character = UART_u8RX();
  f2:	0e 94 85 03 	call	0x70a	; 0x70a <UART_u8RX>
			switch(character)
  f6:	82 35       	cpi	r24, 0x52	; 82
  f8:	c1 f0       	breq	.+48     	; 0x12a <main+0x98>
  fa:	28 f4       	brcc	.+10     	; 0x106 <main+0x74>
  fc:	86 34       	cpi	r24, 0x46	; 70
  fe:	41 f0       	breq	.+16     	; 0x110 <main+0x7e>
 100:	8c 34       	cpi	r24, 0x4C	; 76
 102:	b1 f0       	breq	.+44     	; 0x130 <main+0x9e>
 104:	f4 cf       	rjmp	.-24     	; 0xee <main+0x5c>
 106:	83 35       	cpi	r24, 0x53	; 83
 108:	49 f0       	breq	.+18     	; 0x11c <main+0x8a>
 10a:	86 35       	cpi	r24, 0x56	; 86
 10c:	21 f0       	breq	.+8      	; 0x116 <main+0x84>
 10e:	ef cf       	rjmp	.-34     	; 0xee <main+0x5c>
			{
				case 'F' :      DCMOTOR_voidF();				break;
 110:	0e 94 83 01 	call	0x306	; 0x306 <DCMOTOR_voidF>
 114:	ec cf       	rjmp	.-40     	; 0xee <main+0x5c>
				case 'V' :      DCMOTOR_voidV();				break;
 116:	0e 94 8a 01 	call	0x314	; 0x314 <DCMOTOR_voidV>
 11a:	e9 cf       	rjmp	.-46     	; 0xee <main+0x5c>
				case 'S' :
						 {
							DCMOTOR_voidStop(MOTOR1);
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	0e 94 46 01 	call	0x28c	; 0x28c <DCMOTOR_voidStop>
							DCMOTOR_voidStop(MOTOR2);
 122:	82 e0       	ldi	r24, 0x02	; 2
 124:	0e 94 46 01 	call	0x28c	; 0x28c <DCMOTOR_voidStop>
							break;
 128:	e2 cf       	rjmp	.-60     	; 0xee <main+0x5c>
						 }
				case 'R' :      DCMOTOR_voidR();				break;
 12a:	0e 94 91 01 	call	0x322	; 0x322 <DCMOTOR_voidR>
 12e:	df cf       	rjmp	.-66     	; 0xee <main+0x5c>
				case 'L' :      DCMOTOR_voidL();				break;
 130:	0e 94 98 01 	call	0x330	; 0x330 <DCMOTOR_voidL>
 134:	dc cf       	rjmp	.-72     	; 0xee <main+0x5c>
			}	
		}
		
		else if ('2' == flag)
 136:	12 33       	cpi	r17, 0x32	; 50
 138:	d1 f6       	brne	.-76     	; 0xee <main+0x5c>
		{
			Right_IR = DIO_u8ReadpinVal(DIO_PORTA , DIO_PIN1);
 13a:	61 e0       	ldi	r22, 0x01	; 1
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	0e 94 85 02 	call	0x50a	; 0x50a <DIO_u8ReadpinVal>
 142:	08 2f       	mov	r16, r24
			Left_IR =  DIO_u8ReadpinVal(DIO_PORTA , DIO_PIN0);
 144:	60 e0       	ldi	r22, 0x00	; 0
 146:	80 e0       	ldi	r24, 0x00	; 0
 148:	0e 94 85 02 	call	0x50a	; 0x50a <DIO_u8ReadpinVal>
			if ((Left_IR == 1) && (Right_IR == 1))
 14c:	81 30       	cpi	r24, 0x01	; 1
 14e:	29 f4       	brne	.+10     	; 0x15a <main+0xc8>
 150:	01 30       	cpi	r16, 0x01	; 1
 152:	19 f4       	brne	.+6      	; 0x15a <main+0xc8>
			{
				DCMOTOR_voidF();
 154:	0e 94 83 01 	call	0x306	; 0x306 <DCMOTOR_voidF>
 158:	ca cf       	rjmp	.-108    	; 0xee <main+0x5c>
			}
			else if ((Left_IR == 1) && (Right_IR == 0))
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	29 f4       	brne	.+10     	; 0x168 <main+0xd6>
 15e:	01 11       	cpse	r16, r1
 160:	03 c0       	rjmp	.+6      	; 0x168 <main+0xd6>
			{
				DCMOTOR_voidR();
 162:	0e 94 91 01 	call	0x322	; 0x322 <DCMOTOR_voidR>
 166:	c3 cf       	rjmp	.-122    	; 0xee <main+0x5c>
			}
			else if ((Left_IR == 0) && (Right_IR == 1))
 168:	81 11       	cpse	r24, r1
 16a:	05 c0       	rjmp	.+10     	; 0x176 <main+0xe4>
 16c:	01 30       	cpi	r16, 0x01	; 1
 16e:	19 f4       	brne	.+6      	; 0x176 <main+0xe4>
			{
				DCMOTOR_voidL();
 170:	0e 94 98 01 	call	0x330	; 0x330 <DCMOTOR_voidL>
 174:	bc cf       	rjmp	.-136    	; 0xee <main+0x5c>
			}
			else if ((Left_IR == 0) && (Right_IR == 0))
 176:	81 11       	cpse	r24, r1
 178:	ba cf       	rjmp	.-140    	; 0xee <main+0x5c>
 17a:	01 11       	cpse	r16, r1
 17c:	b8 cf       	rjmp	.-144    	; 0xee <main+0x5c>
			{
				DCMOTOR_voidV();
 17e:	0e 94 8a 01 	call	0x314	; 0x314 <DCMOTOR_voidV>
 182:	b5 cf       	rjmp	.-150    	; 0xee <main+0x5c>

00000184 <DCMOTOR_voidCW>:
#include "DCMOTOR_config.h"


void DCMOTOR_voidCW(u8 Motor)
{
	if (Motor == MOTOR1)
 184:	81 30       	cpi	r24, 0x01	; 1
 186:	f9 f4       	brne	.+62     	; 0x1c6 <DCMOTOR_voidCW+0x42>
	{
		/*make pins as output */
		DIO_voidSetPinDir(H_ENA_PORT,H_ENA_PIN,OUTPUT) ;
 188:	41 e0       	ldi	r20, 0x01	; 1
 18a:	64 e0       	ldi	r22, 0x04	; 4
 18c:	83 e0       	ldi	r24, 0x03	; 3
 18e:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
		DIO_voidSetPinDir(H_A1_PORT,H_A1_PIN,OUTPUT) ;
 192:	41 e0       	ldi	r20, 0x01	; 1
 194:	60 e0       	ldi	r22, 0x00	; 0
 196:	82 e0       	ldi	r24, 0x02	; 2
 198:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
		DIO_voidSetPinDir(H_A2_PORT,H_A2_PIN,OUTPUT) ;
 19c:	41 e0       	ldi	r20, 0x01	; 1
 19e:	61 e0       	ldi	r22, 0x01	; 1
 1a0:	82 e0       	ldi	r24, 0x02	; 2
 1a2:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
		
		/*Drive motor cw */
		DIO_voidSetPinVal(H_ENA_PORT,H_ENA_PIN,HIGH) ;
 1a6:	41 e0       	ldi	r20, 0x01	; 1
 1a8:	64 e0       	ldi	r22, 0x04	; 4
 1aa:	83 e0       	ldi	r24, 0x03	; 3
 1ac:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
		DIO_voidSetPinVal(H_A1_PORT,H_A1_PIN,HIGH) ;
 1b0:	41 e0       	ldi	r20, 0x01	; 1
 1b2:	60 e0       	ldi	r22, 0x00	; 0
 1b4:	82 e0       	ldi	r24, 0x02	; 2
 1b6:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
		DIO_voidSetPinVal(H_A2_PORT,H_A2_PIN,LOW) ;
 1ba:	40 e0       	ldi	r20, 0x00	; 0
 1bc:	61 e0       	ldi	r22, 0x01	; 1
 1be:	82 e0       	ldi	r24, 0x02	; 2
 1c0:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
 1c4:	08 95       	ret
	}
	
	else if (Motor == MOTOR2)
 1c6:	82 30       	cpi	r24, 0x02	; 2
 1c8:	f1 f4       	brne	.+60     	; 0x206 <DCMOTOR_voidCW+0x82>
	{
		/*make pins as output */
		DIO_voidSetPinDir(H_ENB_PORT,H_ENB_PIN,OUTPUT) ;
 1ca:	41 e0       	ldi	r20, 0x01	; 1
 1cc:	65 e0       	ldi	r22, 0x05	; 5
 1ce:	83 e0       	ldi	r24, 0x03	; 3
 1d0:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
		DIO_voidSetPinDir(H_A3_PORT,H_A3_PIN,OUTPUT) ;
 1d4:	41 e0       	ldi	r20, 0x01	; 1
 1d6:	62 e0       	ldi	r22, 0x02	; 2
 1d8:	82 e0       	ldi	r24, 0x02	; 2
 1da:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
		DIO_voidSetPinDir(H_A4_PORT,H_A4_PIN,OUTPUT) ;
 1de:	41 e0       	ldi	r20, 0x01	; 1
 1e0:	63 e0       	ldi	r22, 0x03	; 3
 1e2:	82 e0       	ldi	r24, 0x02	; 2
 1e4:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>

		/*Drive motor cw */
		DIO_voidSetPinVal(H_ENB_PORT,H_ENB_PIN,HIGH) ;
 1e8:	41 e0       	ldi	r20, 0x01	; 1
 1ea:	65 e0       	ldi	r22, 0x05	; 5
 1ec:	83 e0       	ldi	r24, 0x03	; 3
 1ee:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
		DIO_voidSetPinVal(H_A3_PORT,H_A3_PIN,HIGH) ;
 1f2:	41 e0       	ldi	r20, 0x01	; 1
 1f4:	62 e0       	ldi	r22, 0x02	; 2
 1f6:	82 e0       	ldi	r24, 0x02	; 2
 1f8:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
		DIO_voidSetPinVal(H_A4_PORT,H_A4_PIN,LOW) ;
 1fc:	40 e0       	ldi	r20, 0x00	; 0
 1fe:	63 e0       	ldi	r22, 0x03	; 3
 200:	82 e0       	ldi	r24, 0x02	; 2
 202:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
 206:	08 95       	ret

00000208 <DCMOTOR_voidACW>:
	
}

void DCMOTOR_voidACW(u8 Motor)
{
	if (Motor == MOTOR1)
 208:	81 30       	cpi	r24, 0x01	; 1
 20a:	f9 f4       	brne	.+62     	; 0x24a <DCMOTOR_voidACW+0x42>
	{
		/*make pins as output */
		DIO_voidSetPinDir(H_ENA_PORT,H_ENA_PIN,OUTPUT) ;
 20c:	41 e0       	ldi	r20, 0x01	; 1
 20e:	64 e0       	ldi	r22, 0x04	; 4
 210:	83 e0       	ldi	r24, 0x03	; 3
 212:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
		DIO_voidSetPinDir(H_A1_PORT,H_A1_PIN,OUTPUT) ;
 216:	41 e0       	ldi	r20, 0x01	; 1
 218:	60 e0       	ldi	r22, 0x00	; 0
 21a:	82 e0       	ldi	r24, 0x02	; 2
 21c:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
		DIO_voidSetPinDir(H_A2_PORT,H_A2_PIN,OUTPUT) ;
 220:	41 e0       	ldi	r20, 0x01	; 1
 222:	61 e0       	ldi	r22, 0x01	; 1
 224:	82 e0       	ldi	r24, 0x02	; 2
 226:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
		
		/*Drive motor cw */
		DIO_voidSetPinVal(H_ENA_PORT,H_ENA_PIN,HIGH) ;
 22a:	41 e0       	ldi	r20, 0x01	; 1
 22c:	64 e0       	ldi	r22, 0x04	; 4
 22e:	83 e0       	ldi	r24, 0x03	; 3
 230:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
		DIO_voidSetPinVal(H_A1_PORT,H_A1_PIN,LOW) ;
 234:	40 e0       	ldi	r20, 0x00	; 0
 236:	60 e0       	ldi	r22, 0x00	; 0
 238:	82 e0       	ldi	r24, 0x02	; 2
 23a:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
		DIO_voidSetPinVal(H_A2_PORT,H_A2_PIN,HIGH) ;
 23e:	41 e0       	ldi	r20, 0x01	; 1
 240:	61 e0       	ldi	r22, 0x01	; 1
 242:	82 e0       	ldi	r24, 0x02	; 2
 244:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
 248:	08 95       	ret
	}
	
	else if (Motor == MOTOR2)
 24a:	82 30       	cpi	r24, 0x02	; 2
 24c:	f1 f4       	brne	.+60     	; 0x28a <DCMOTOR_voidACW+0x82>
	{
		/*make pins as output */
		DIO_voidSetPinDir(H_ENB_PORT,H_ENB_PIN,OUTPUT) ;
 24e:	41 e0       	ldi	r20, 0x01	; 1
 250:	65 e0       	ldi	r22, 0x05	; 5
 252:	83 e0       	ldi	r24, 0x03	; 3
 254:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
		DIO_voidSetPinDir(H_A3_PORT,H_A3_PIN,OUTPUT) ;
 258:	41 e0       	ldi	r20, 0x01	; 1
 25a:	62 e0       	ldi	r22, 0x02	; 2
 25c:	82 e0       	ldi	r24, 0x02	; 2
 25e:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
		DIO_voidSetPinDir(H_A4_PORT,H_A4_PIN,OUTPUT) ;
 262:	41 e0       	ldi	r20, 0x01	; 1
 264:	63 e0       	ldi	r22, 0x03	; 3
 266:	82 e0       	ldi	r24, 0x02	; 2
 268:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>

		/*Drive motor cw */
		DIO_voidSetPinVal(H_ENB_PORT,H_ENB_PIN,HIGH) ;
 26c:	41 e0       	ldi	r20, 0x01	; 1
 26e:	65 e0       	ldi	r22, 0x05	; 5
 270:	83 e0       	ldi	r24, 0x03	; 3
 272:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
		DIO_voidSetPinVal(H_A3_PORT,H_A3_PIN,LOW) ;
 276:	40 e0       	ldi	r20, 0x00	; 0
 278:	62 e0       	ldi	r22, 0x02	; 2
 27a:	82 e0       	ldi	r24, 0x02	; 2
 27c:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
		DIO_voidSetPinVal(H_A4_PORT,H_A4_PIN,HIGH) ;
 280:	41 e0       	ldi	r20, 0x01	; 1
 282:	63 e0       	ldi	r22, 0x03	; 3
 284:	82 e0       	ldi	r24, 0x02	; 2
 286:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
 28a:	08 95       	ret

0000028c <DCMOTOR_voidStop>:

void DCMOTOR_voidStop(u8 Motor){
	
	
	/*make pins as output */
	DIO_voidSetPinDir(H_ENA_PORT,H_ENA_PIN,OUTPUT) ;
 28c:	41 e0       	ldi	r20, 0x01	; 1
 28e:	64 e0       	ldi	r22, 0x04	; 4
 290:	83 e0       	ldi	r24, 0x03	; 3
 292:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(H_ENB_PORT,H_ENB_PIN,OUTPUT) ;
 296:	41 e0       	ldi	r20, 0x01	; 1
 298:	65 e0       	ldi	r22, 0x05	; 5
 29a:	83 e0       	ldi	r24, 0x03	; 3
 29c:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(H_A1_PORT,H_A1_PIN,OUTPUT) ;
 2a0:	41 e0       	ldi	r20, 0x01	; 1
 2a2:	60 e0       	ldi	r22, 0x00	; 0
 2a4:	82 e0       	ldi	r24, 0x02	; 2
 2a6:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(H_A2_PORT,H_A2_PIN,OUTPUT) ;
 2aa:	41 e0       	ldi	r20, 0x01	; 1
 2ac:	61 e0       	ldi	r22, 0x01	; 1
 2ae:	82 e0       	ldi	r24, 0x02	; 2
 2b0:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(H_A3_PORT,H_A3_PIN,OUTPUT) ;
 2b4:	41 e0       	ldi	r20, 0x01	; 1
 2b6:	62 e0       	ldi	r22, 0x02	; 2
 2b8:	82 e0       	ldi	r24, 0x02	; 2
 2ba:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
	DIO_voidSetPinDir(H_A4_PORT,H_A4_PIN,OUTPUT) ;
 2be:	41 e0       	ldi	r20, 0x01	; 1
 2c0:	63 e0       	ldi	r22, 0x03	; 3
 2c2:	82 e0       	ldi	r24, 0x02	; 2
 2c4:	0e 94 9f 01 	call	0x33e	; 0x33e <DIO_voidSetPinDir>
	
	/*Drive motor stop */
	
	DIO_voidSetPinVal(H_ENA_PORT,H_ENA_PIN,LOW) ;
 2c8:	40 e0       	ldi	r20, 0x00	; 0
 2ca:	64 e0       	ldi	r22, 0x04	; 4
 2cc:	83 e0       	ldi	r24, 0x03	; 3
 2ce:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
	DIO_voidSetPinVal(H_ENB_PORT,H_ENB_PIN,LOW) ;
 2d2:	40 e0       	ldi	r20, 0x00	; 0
 2d4:	65 e0       	ldi	r22, 0x05	; 5
 2d6:	83 e0       	ldi	r24, 0x03	; 3
 2d8:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
	DIO_voidSetPinVal(H_A1_PORT,H_A1_PIN,LOW) ;
 2dc:	40 e0       	ldi	r20, 0x00	; 0
 2de:	60 e0       	ldi	r22, 0x00	; 0
 2e0:	82 e0       	ldi	r24, 0x02	; 2
 2e2:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
	DIO_voidSetPinVal(H_A2_PORT,H_A2_PIN,LOW) ;
 2e6:	40 e0       	ldi	r20, 0x00	; 0
 2e8:	61 e0       	ldi	r22, 0x01	; 1
 2ea:	82 e0       	ldi	r24, 0x02	; 2
 2ec:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
	DIO_voidSetPinVal(H_A3_PORT,H_A3_PIN,LOW) ;
 2f0:	40 e0       	ldi	r20, 0x00	; 0
 2f2:	62 e0       	ldi	r22, 0x02	; 2
 2f4:	82 e0       	ldi	r24, 0x02	; 2
 2f6:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
	DIO_voidSetPinVal(H_A4_PORT,H_A4_PIN,LOW) ;
 2fa:	40 e0       	ldi	r20, 0x00	; 0
 2fc:	63 e0       	ldi	r22, 0x03	; 3
 2fe:	82 e0       	ldi	r24, 0x02	; 2
 300:	0e 94 12 02 	call	0x424	; 0x424 <DIO_voidSetPinVal>
 304:	08 95       	ret

00000306 <DCMOTOR_voidF>:
}


void DCMOTOR_voidF(void){
	
	DCMOTOR_voidACW(MOTOR1);
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	0e 94 04 01 	call	0x208	; 0x208 <DCMOTOR_voidACW>
	DCMOTOR_voidCW(MOTOR2);
 30c:	82 e0       	ldi	r24, 0x02	; 2
 30e:	0e 94 c2 00 	call	0x184	; 0x184 <DCMOTOR_voidCW>
 312:	08 95       	ret

00000314 <DCMOTOR_voidV>:
}


void DCMOTOR_voidV(void){
	
	DCMOTOR_voidCW(MOTOR1);
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	0e 94 c2 00 	call	0x184	; 0x184 <DCMOTOR_voidCW>
	DCMOTOR_voidACW(MOTOR2);
 31a:	82 e0       	ldi	r24, 0x02	; 2
 31c:	0e 94 04 01 	call	0x208	; 0x208 <DCMOTOR_voidACW>
 320:	08 95       	ret

00000322 <DCMOTOR_voidR>:
}


void DCMOTOR_voidR(void)
{
	DCMOTOR_voidStop(MOTOR2);
 322:	82 e0       	ldi	r24, 0x02	; 2
 324:	0e 94 46 01 	call	0x28c	; 0x28c <DCMOTOR_voidStop>
	DCMOTOR_voidCW(MOTOR1);
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	0e 94 c2 00 	call	0x184	; 0x184 <DCMOTOR_voidCW>
 32e:	08 95       	ret

00000330 <DCMOTOR_voidL>:
}


void DCMOTOR_voidL(void)
{
	DCMOTOR_voidStop(MOTOR1);
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	0e 94 46 01 	call	0x28c	; 0x28c <DCMOTOR_voidStop>
	DCMOTOR_voidACW(MOTOR2);
 336:	82 e0       	ldi	r24, 0x02	; 2
 338:	0e 94 04 01 	call	0x208	; 0x208 <DCMOTOR_voidACW>
 33c:	08 95       	ret

0000033e <DIO_voidSetPinDir>:
 33e:	42 30       	cpi	r20, 0x02	; 2
 340:	08 f0       	brcs	.+2      	; 0x344 <DIO_voidSetPinDir+0x6>
 342:	6f c0       	rjmp	.+222    	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 344:	41 30       	cpi	r20, 0x01	; 1
 346:	a1 f5       	brne	.+104    	; 0x3b0 <DIO_voidSetPinDir+0x72>
 348:	81 30       	cpi	r24, 0x01	; 1
 34a:	89 f0       	breq	.+34     	; 0x36e <DIO_voidSetPinDir+0x30>
 34c:	28 f0       	brcs	.+10     	; 0x358 <DIO_voidSetPinDir+0x1a>
 34e:	82 30       	cpi	r24, 0x02	; 2
 350:	c9 f0       	breq	.+50     	; 0x384 <DIO_voidSetPinDir+0x46>
 352:	83 30       	cpi	r24, 0x03	; 3
 354:	11 f1       	breq	.+68     	; 0x39a <DIO_voidSetPinDir+0x5c>
 356:	08 95       	ret
 358:	2a b3       	in	r18, 0x1a	; 26
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	02 c0       	rjmp	.+4      	; 0x364 <DIO_voidSetPinDir+0x26>
 360:	88 0f       	add	r24, r24
 362:	99 1f       	adc	r25, r25
 364:	6a 95       	dec	r22
 366:	e2 f7       	brpl	.-8      	; 0x360 <DIO_voidSetPinDir+0x22>
 368:	82 2b       	or	r24, r18
 36a:	8a bb       	out	0x1a, r24	; 26
 36c:	08 95       	ret
 36e:	27 b3       	in	r18, 0x17	; 23
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	02 c0       	rjmp	.+4      	; 0x37a <DIO_voidSetPinDir+0x3c>
 376:	88 0f       	add	r24, r24
 378:	99 1f       	adc	r25, r25
 37a:	6a 95       	dec	r22
 37c:	e2 f7       	brpl	.-8      	; 0x376 <DIO_voidSetPinDir+0x38>
 37e:	82 2b       	or	r24, r18
 380:	87 bb       	out	0x17, r24	; 23
 382:	08 95       	ret
 384:	24 b3       	in	r18, 0x14	; 20
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	02 c0       	rjmp	.+4      	; 0x390 <DIO_voidSetPinDir+0x52>
 38c:	88 0f       	add	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	6a 95       	dec	r22
 392:	e2 f7       	brpl	.-8      	; 0x38c <DIO_voidSetPinDir+0x4e>
 394:	82 2b       	or	r24, r18
 396:	84 bb       	out	0x14, r24	; 20
 398:	08 95       	ret
 39a:	21 b3       	in	r18, 0x11	; 17
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <DIO_voidSetPinDir+0x68>
 3a2:	88 0f       	add	r24, r24
 3a4:	99 1f       	adc	r25, r25
 3a6:	6a 95       	dec	r22
 3a8:	e2 f7       	brpl	.-8      	; 0x3a2 <DIO_voidSetPinDir+0x64>
 3aa:	82 2b       	or	r24, r18
 3ac:	81 bb       	out	0x11, r24	; 17
 3ae:	08 95       	ret
 3b0:	41 11       	cpse	r20, r1
 3b2:	37 c0       	rjmp	.+110    	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 3b4:	81 30       	cpi	r24, 0x01	; 1
 3b6:	91 f0       	breq	.+36     	; 0x3dc <DIO_voidSetPinDir+0x9e>
 3b8:	28 f0       	brcs	.+10     	; 0x3c4 <DIO_voidSetPinDir+0x86>
 3ba:	82 30       	cpi	r24, 0x02	; 2
 3bc:	d9 f0       	breq	.+54     	; 0x3f4 <DIO_voidSetPinDir+0xb6>
 3be:	83 30       	cpi	r24, 0x03	; 3
 3c0:	29 f1       	breq	.+74     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 3c2:	08 95       	ret
 3c4:	2a b3       	in	r18, 0x1a	; 26
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	02 c0       	rjmp	.+4      	; 0x3d0 <DIO_voidSetPinDir+0x92>
 3cc:	88 0f       	add	r24, r24
 3ce:	99 1f       	adc	r25, r25
 3d0:	6a 95       	dec	r22
 3d2:	e2 f7       	brpl	.-8      	; 0x3cc <DIO_voidSetPinDir+0x8e>
 3d4:	80 95       	com	r24
 3d6:	82 23       	and	r24, r18
 3d8:	8a bb       	out	0x1a, r24	; 26
 3da:	08 95       	ret
 3dc:	27 b3       	in	r18, 0x17	; 23
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <DIO_voidSetPinDir+0xaa>
 3e4:	88 0f       	add	r24, r24
 3e6:	99 1f       	adc	r25, r25
 3e8:	6a 95       	dec	r22
 3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <DIO_voidSetPinDir+0xa6>
 3ec:	80 95       	com	r24
 3ee:	82 23       	and	r24, r18
 3f0:	87 bb       	out	0x17, r24	; 23
 3f2:	08 95       	ret
 3f4:	24 b3       	in	r18, 0x14	; 20
 3f6:	81 e0       	ldi	r24, 0x01	; 1
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fc:	88 0f       	add	r24, r24
 3fe:	99 1f       	adc	r25, r25
 400:	6a 95       	dec	r22
 402:	e2 f7       	brpl	.-8      	; 0x3fc <DIO_voidSetPinDir+0xbe>
 404:	80 95       	com	r24
 406:	82 23       	and	r24, r18
 408:	84 bb       	out	0x14, r24	; 20
 40a:	08 95       	ret
 40c:	21 b3       	in	r18, 0x11	; 17
 40e:	81 e0       	ldi	r24, 0x01	; 1
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	02 c0       	rjmp	.+4      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 414:	88 0f       	add	r24, r24
 416:	99 1f       	adc	r25, r25
 418:	6a 95       	dec	r22
 41a:	e2 f7       	brpl	.-8      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 41c:	80 95       	com	r24
 41e:	82 23       	and	r24, r18
 420:	81 bb       	out	0x11, r24	; 17
 422:	08 95       	ret

00000424 <DIO_voidSetPinVal>:
 424:	42 30       	cpi	r20, 0x02	; 2
 426:	08 f0       	brcs	.+2      	; 0x42a <DIO_voidSetPinVal+0x6>
 428:	6f c0       	rjmp	.+222    	; 0x508 <DIO_voidSetPinVal+0xe4>
 42a:	41 30       	cpi	r20, 0x01	; 1
 42c:	a1 f5       	brne	.+104    	; 0x496 <DIO_voidSetPinVal+0x72>
 42e:	81 30       	cpi	r24, 0x01	; 1
 430:	89 f0       	breq	.+34     	; 0x454 <DIO_voidSetPinVal+0x30>
 432:	28 f0       	brcs	.+10     	; 0x43e <DIO_voidSetPinVal+0x1a>
 434:	82 30       	cpi	r24, 0x02	; 2
 436:	c9 f0       	breq	.+50     	; 0x46a <DIO_voidSetPinVal+0x46>
 438:	83 30       	cpi	r24, 0x03	; 3
 43a:	11 f1       	breq	.+68     	; 0x480 <DIO_voidSetPinVal+0x5c>
 43c:	08 95       	ret
 43e:	2b b3       	in	r18, 0x1b	; 27
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	02 c0       	rjmp	.+4      	; 0x44a <DIO_voidSetPinVal+0x26>
 446:	88 0f       	add	r24, r24
 448:	99 1f       	adc	r25, r25
 44a:	6a 95       	dec	r22
 44c:	e2 f7       	brpl	.-8      	; 0x446 <DIO_voidSetPinVal+0x22>
 44e:	82 2b       	or	r24, r18
 450:	8b bb       	out	0x1b, r24	; 27
 452:	08 95       	ret
 454:	28 b3       	in	r18, 0x18	; 24
 456:	81 e0       	ldi	r24, 0x01	; 1
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	02 c0       	rjmp	.+4      	; 0x460 <DIO_voidSetPinVal+0x3c>
 45c:	88 0f       	add	r24, r24
 45e:	99 1f       	adc	r25, r25
 460:	6a 95       	dec	r22
 462:	e2 f7       	brpl	.-8      	; 0x45c <DIO_voidSetPinVal+0x38>
 464:	82 2b       	or	r24, r18
 466:	88 bb       	out	0x18, r24	; 24
 468:	08 95       	ret
 46a:	25 b3       	in	r18, 0x15	; 21
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	02 c0       	rjmp	.+4      	; 0x476 <DIO_voidSetPinVal+0x52>
 472:	88 0f       	add	r24, r24
 474:	99 1f       	adc	r25, r25
 476:	6a 95       	dec	r22
 478:	e2 f7       	brpl	.-8      	; 0x472 <DIO_voidSetPinVal+0x4e>
 47a:	82 2b       	or	r24, r18
 47c:	85 bb       	out	0x15, r24	; 21
 47e:	08 95       	ret
 480:	22 b3       	in	r18, 0x12	; 18
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	02 c0       	rjmp	.+4      	; 0x48c <DIO_voidSetPinVal+0x68>
 488:	88 0f       	add	r24, r24
 48a:	99 1f       	adc	r25, r25
 48c:	6a 95       	dec	r22
 48e:	e2 f7       	brpl	.-8      	; 0x488 <DIO_voidSetPinVal+0x64>
 490:	82 2b       	or	r24, r18
 492:	82 bb       	out	0x12, r24	; 18
 494:	08 95       	ret
 496:	41 11       	cpse	r20, r1
 498:	37 c0       	rjmp	.+110    	; 0x508 <DIO_voidSetPinVal+0xe4>
 49a:	81 30       	cpi	r24, 0x01	; 1
 49c:	91 f0       	breq	.+36     	; 0x4c2 <DIO_voidSetPinVal+0x9e>
 49e:	28 f0       	brcs	.+10     	; 0x4aa <DIO_voidSetPinVal+0x86>
 4a0:	82 30       	cpi	r24, 0x02	; 2
 4a2:	d9 f0       	breq	.+54     	; 0x4da <DIO_voidSetPinVal+0xb6>
 4a4:	83 30       	cpi	r24, 0x03	; 3
 4a6:	29 f1       	breq	.+74     	; 0x4f2 <DIO_voidSetPinVal+0xce>
 4a8:	08 95       	ret
 4aa:	2b b3       	in	r18, 0x1b	; 27
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <DIO_voidSetPinVal+0x92>
 4b2:	88 0f       	add	r24, r24
 4b4:	99 1f       	adc	r25, r25
 4b6:	6a 95       	dec	r22
 4b8:	e2 f7       	brpl	.-8      	; 0x4b2 <DIO_voidSetPinVal+0x8e>
 4ba:	80 95       	com	r24
 4bc:	82 23       	and	r24, r18
 4be:	8b bb       	out	0x1b, r24	; 27
 4c0:	08 95       	ret
 4c2:	28 b3       	in	r18, 0x18	; 24
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	02 c0       	rjmp	.+4      	; 0x4ce <DIO_voidSetPinVal+0xaa>
 4ca:	88 0f       	add	r24, r24
 4cc:	99 1f       	adc	r25, r25
 4ce:	6a 95       	dec	r22
 4d0:	e2 f7       	brpl	.-8      	; 0x4ca <DIO_voidSetPinVal+0xa6>
 4d2:	80 95       	com	r24
 4d4:	82 23       	and	r24, r18
 4d6:	88 bb       	out	0x18, r24	; 24
 4d8:	08 95       	ret
 4da:	25 b3       	in	r18, 0x15	; 21
 4dc:	81 e0       	ldi	r24, 0x01	; 1
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <DIO_voidSetPinVal+0xc2>
 4e2:	88 0f       	add	r24, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	6a 95       	dec	r22
 4e8:	e2 f7       	brpl	.-8      	; 0x4e2 <DIO_voidSetPinVal+0xbe>
 4ea:	80 95       	com	r24
 4ec:	82 23       	and	r24, r18
 4ee:	85 bb       	out	0x15, r24	; 21
 4f0:	08 95       	ret
 4f2:	22 b3       	in	r18, 0x12	; 18
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	02 c0       	rjmp	.+4      	; 0x4fe <DIO_voidSetPinVal+0xda>
 4fa:	88 0f       	add	r24, r24
 4fc:	99 1f       	adc	r25, r25
 4fe:	6a 95       	dec	r22
 500:	e2 f7       	brpl	.-8      	; 0x4fa <DIO_voidSetPinVal+0xd6>
 502:	80 95       	com	r24
 504:	82 23       	and	r24, r18
 506:	82 bb       	out	0x12, r24	; 18
 508:	08 95       	ret

0000050a <DIO_u8ReadpinVal>:
 50a:	81 30       	cpi	r24, 0x01	; 1
 50c:	79 f0       	breq	.+30     	; 0x52c <DIO_u8ReadpinVal+0x22>
 50e:	28 f0       	brcs	.+10     	; 0x51a <DIO_u8ReadpinVal+0x10>
 510:	82 30       	cpi	r24, 0x02	; 2
 512:	a9 f0       	breq	.+42     	; 0x53e <DIO_u8ReadpinVal+0x34>
 514:	83 30       	cpi	r24, 0x03	; 3
 516:	e1 f0       	breq	.+56     	; 0x550 <DIO_u8ReadpinVal+0x46>
 518:	24 c0       	rjmp	.+72     	; 0x562 <DIO_u8ReadpinVal+0x58>
 51a:	89 b3       	in	r24, 0x19	; 25
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	02 c0       	rjmp	.+4      	; 0x524 <DIO_u8ReadpinVal+0x1a>
 520:	95 95       	asr	r25
 522:	87 95       	ror	r24
 524:	6a 95       	dec	r22
 526:	e2 f7       	brpl	.-8      	; 0x520 <DIO_u8ReadpinVal+0x16>
 528:	81 70       	andi	r24, 0x01	; 1
 52a:	08 95       	ret
 52c:	86 b3       	in	r24, 0x16	; 22
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	02 c0       	rjmp	.+4      	; 0x536 <DIO_u8ReadpinVal+0x2c>
 532:	95 95       	asr	r25
 534:	87 95       	ror	r24
 536:	6a 95       	dec	r22
 538:	e2 f7       	brpl	.-8      	; 0x532 <DIO_u8ReadpinVal+0x28>
 53a:	81 70       	andi	r24, 0x01	; 1
 53c:	08 95       	ret
 53e:	83 b3       	in	r24, 0x13	; 19
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	02 c0       	rjmp	.+4      	; 0x548 <DIO_u8ReadpinVal+0x3e>
 544:	95 95       	asr	r25
 546:	87 95       	ror	r24
 548:	6a 95       	dec	r22
 54a:	e2 f7       	brpl	.-8      	; 0x544 <DIO_u8ReadpinVal+0x3a>
 54c:	81 70       	andi	r24, 0x01	; 1
 54e:	08 95       	ret
 550:	80 b3       	in	r24, 0x10	; 16
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	02 c0       	rjmp	.+4      	; 0x55a <DIO_u8ReadpinVal+0x50>
 556:	95 95       	asr	r25
 558:	87 95       	ror	r24
 55a:	6a 95       	dec	r22
 55c:	e2 f7       	brpl	.-8      	; 0x556 <DIO_u8ReadpinVal+0x4c>
 55e:	81 70       	andi	r24, 0x01	; 1
 560:	08 95       	ret
 562:	80 e0       	ldi	r24, 0x00	; 0
 564:	08 95       	ret

00000566 <__vector_1>:
 566:	1f 92       	push	r1
 568:	0f 92       	push	r0
 56a:	0f b6       	in	r0, 0x3f	; 63
 56c:	0f 92       	push	r0
 56e:	11 24       	eor	r1, r1
 570:	2f 93       	push	r18
 572:	3f 93       	push	r19
 574:	4f 93       	push	r20
 576:	5f 93       	push	r21
 578:	6f 93       	push	r22
 57a:	7f 93       	push	r23
 57c:	8f 93       	push	r24
 57e:	9f 93       	push	r25
 580:	af 93       	push	r26
 582:	bf 93       	push	r27
 584:	ef 93       	push	r30
 586:	ff 93       	push	r31
 588:	e0 91 c4 00 	lds	r30, 0x00C4	; 0x8000c4 <__data_end>
 58c:	f0 91 c5 00 	lds	r31, 0x00C5	; 0x8000c5 <__data_end+0x1>
 590:	09 95       	icall
 592:	ff 91       	pop	r31
 594:	ef 91       	pop	r30
 596:	bf 91       	pop	r27
 598:	af 91       	pop	r26
 59a:	9f 91       	pop	r25
 59c:	8f 91       	pop	r24
 59e:	7f 91       	pop	r23
 5a0:	6f 91       	pop	r22
 5a2:	5f 91       	pop	r21
 5a4:	4f 91       	pop	r20
 5a6:	3f 91       	pop	r19
 5a8:	2f 91       	pop	r18
 5aa:	0f 90       	pop	r0
 5ac:	0f be       	out	0x3f, r0	; 63
 5ae:	0f 90       	pop	r0
 5b0:	1f 90       	pop	r1
 5b2:	18 95       	reti

000005b4 <__vector_2>:
 5b4:	1f 92       	push	r1
 5b6:	0f 92       	push	r0
 5b8:	0f b6       	in	r0, 0x3f	; 63
 5ba:	0f 92       	push	r0
 5bc:	11 24       	eor	r1, r1
 5be:	2f 93       	push	r18
 5c0:	3f 93       	push	r19
 5c2:	4f 93       	push	r20
 5c4:	5f 93       	push	r21
 5c6:	6f 93       	push	r22
 5c8:	7f 93       	push	r23
 5ca:	8f 93       	push	r24
 5cc:	9f 93       	push	r25
 5ce:	af 93       	push	r26
 5d0:	bf 93       	push	r27
 5d2:	ef 93       	push	r30
 5d4:	ff 93       	push	r31
 5d6:	e0 91 c6 00 	lds	r30, 0x00C6	; 0x8000c6 <__data_end+0x2>
 5da:	f0 91 c7 00 	lds	r31, 0x00C7	; 0x8000c7 <__data_end+0x3>
 5de:	09 95       	icall
 5e0:	ff 91       	pop	r31
 5e2:	ef 91       	pop	r30
 5e4:	bf 91       	pop	r27
 5e6:	af 91       	pop	r26
 5e8:	9f 91       	pop	r25
 5ea:	8f 91       	pop	r24
 5ec:	7f 91       	pop	r23
 5ee:	6f 91       	pop	r22
 5f0:	5f 91       	pop	r21
 5f2:	4f 91       	pop	r20
 5f4:	3f 91       	pop	r19
 5f6:	2f 91       	pop	r18
 5f8:	0f 90       	pop	r0
 5fa:	0f be       	out	0x3f, r0	; 63
 5fc:	0f 90       	pop	r0
 5fe:	1f 90       	pop	r1
 600:	18 95       	reti

00000602 <__vector_3>:
 602:	1f 92       	push	r1
 604:	0f 92       	push	r0
 606:	0f b6       	in	r0, 0x3f	; 63
 608:	0f 92       	push	r0
 60a:	11 24       	eor	r1, r1
 60c:	2f 93       	push	r18
 60e:	3f 93       	push	r19
 610:	4f 93       	push	r20
 612:	5f 93       	push	r21
 614:	6f 93       	push	r22
 616:	7f 93       	push	r23
 618:	8f 93       	push	r24
 61a:	9f 93       	push	r25
 61c:	af 93       	push	r26
 61e:	bf 93       	push	r27
 620:	ef 93       	push	r30
 622:	ff 93       	push	r31
 624:	e0 91 c8 00 	lds	r30, 0x00C8	; 0x8000c8 <__data_end+0x4>
 628:	f0 91 c9 00 	lds	r31, 0x00C9	; 0x8000c9 <__data_end+0x5>
 62c:	09 95       	icall
 62e:	ff 91       	pop	r31
 630:	ef 91       	pop	r30
 632:	bf 91       	pop	r27
 634:	af 91       	pop	r26
 636:	9f 91       	pop	r25
 638:	8f 91       	pop	r24
 63a:	7f 91       	pop	r23
 63c:	6f 91       	pop	r22
 63e:	5f 91       	pop	r21
 640:	4f 91       	pop	r20
 642:	3f 91       	pop	r19
 644:	2f 91       	pop	r18
 646:	0f 90       	pop	r0
 648:	0f be       	out	0x3f, r0	; 63
 64a:	0f 90       	pop	r0
 64c:	1f 90       	pop	r1
 64e:	18 95       	reti

00000650 <__vector_11>:
 650:	1f 92       	push	r1
 652:	0f 92       	push	r0
 654:	0f b6       	in	r0, 0x3f	; 63
 656:	0f 92       	push	r0
 658:	11 24       	eor	r1, r1
 65a:	2f 93       	push	r18
 65c:	3f 93       	push	r19
 65e:	4f 93       	push	r20
 660:	5f 93       	push	r21
 662:	6f 93       	push	r22
 664:	7f 93       	push	r23
 666:	8f 93       	push	r24
 668:	9f 93       	push	r25
 66a:	af 93       	push	r26
 66c:	bf 93       	push	r27
 66e:	ef 93       	push	r30
 670:	ff 93       	push	r31
 672:	e0 91 ca 00 	lds	r30, 0x00CA	; 0x8000ca <TIM0_PTR>
 676:	f0 91 cb 00 	lds	r31, 0x00CB	; 0x8000cb <TIM0_PTR+0x1>
 67a:	09 95       	icall
 67c:	ff 91       	pop	r31
 67e:	ef 91       	pop	r30
 680:	bf 91       	pop	r27
 682:	af 91       	pop	r26
 684:	9f 91       	pop	r25
 686:	8f 91       	pop	r24
 688:	7f 91       	pop	r23
 68a:	6f 91       	pop	r22
 68c:	5f 91       	pop	r21
 68e:	4f 91       	pop	r20
 690:	3f 91       	pop	r19
 692:	2f 91       	pop	r18
 694:	0f 90       	pop	r0
 696:	0f be       	out	0x3f, r0	; 63
 698:	0f 90       	pop	r0
 69a:	1f 90       	pop	r1
 69c:	18 95       	reti

0000069e <__vector_10>:
 69e:	1f 92       	push	r1
 6a0:	0f 92       	push	r0
 6a2:	0f b6       	in	r0, 0x3f	; 63
 6a4:	0f 92       	push	r0
 6a6:	11 24       	eor	r1, r1
 6a8:	2f 93       	push	r18
 6aa:	3f 93       	push	r19
 6ac:	4f 93       	push	r20
 6ae:	5f 93       	push	r21
 6b0:	6f 93       	push	r22
 6b2:	7f 93       	push	r23
 6b4:	8f 93       	push	r24
 6b6:	9f 93       	push	r25
 6b8:	af 93       	push	r26
 6ba:	bf 93       	push	r27
 6bc:	ef 93       	push	r30
 6be:	ff 93       	push	r31
 6c0:	e0 91 cc 00 	lds	r30, 0x00CC	; 0x8000cc <TIM0_PTR+0x2>
 6c4:	f0 91 cd 00 	lds	r31, 0x00CD	; 0x8000cd <TIM0_PTR+0x3>
 6c8:	09 95       	icall
 6ca:	ff 91       	pop	r31
 6cc:	ef 91       	pop	r30
 6ce:	bf 91       	pop	r27
 6d0:	af 91       	pop	r26
 6d2:	9f 91       	pop	r25
 6d4:	8f 91       	pop	r24
 6d6:	7f 91       	pop	r23
 6d8:	6f 91       	pop	r22
 6da:	5f 91       	pop	r21
 6dc:	4f 91       	pop	r20
 6de:	3f 91       	pop	r19
 6e0:	2f 91       	pop	r18
 6e2:	0f 90       	pop	r0
 6e4:	0f be       	out	0x3f, r0	; 63
 6e6:	0f 90       	pop	r0
 6e8:	1f 90       	pop	r1
 6ea:	18 95       	reti

000006ec <UART_voidInit>:
 6ec:	86 e8       	ldi	r24, 0x86	; 134
 6ee:	80 bd       	out	0x20, r24	; 32
 6f0:	87 e6       	ldi	r24, 0x67	; 103
 6f2:	89 b9       	out	0x09, r24	; 9
 6f4:	8a b1       	in	r24, 0x0a	; 10
 6f6:	88 60       	ori	r24, 0x08	; 8
 6f8:	8a b9       	out	0x0a, r24	; 10
 6fa:	8a b1       	in	r24, 0x0a	; 10
 6fc:	80 61       	ori	r24, 0x10	; 16
 6fe:	8a b9       	out	0x0a, r24	; 10
 700:	08 95       	ret

00000702 <UART_voidTX>:
 702:	8c b9       	out	0x0c, r24	; 12
 704:	5d 9b       	sbis	0x0b, 5	; 11
 706:	fe cf       	rjmp	.-4      	; 0x704 <UART_voidTX+0x2>
 708:	08 95       	ret

0000070a <UART_u8RX>:
 70a:	5f 9b       	sbis	0x0b, 7	; 11
 70c:	fe cf       	rjmp	.-4      	; 0x70a <UART_u8RX>
 70e:	8c b1       	in	r24, 0x0c	; 12
 710:	08 95       	ret

00000712 <_exit>:
 712:	f8 94       	cli

00000714 <__stop_program>:
 714:	ff cf       	rjmp	.-2      	; 0x714 <__stop_program>
